name: Testing
on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true

jobs:
  build-and-test:
    name: Testing using ${{ matrix.os }} with ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-13", "windows-latest"]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    env:
      TESTING_FILES_FOLDER_PATH: ./204919/testing_files/
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --prune --unshallow --tags

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pytest
        run: |
          pip install pytest
          pip install pytest-cov

      - name: Install package
        run: pip install ".[dandi]"
      - name: Download testing data and set config path
        run: dandi download "https://gui-staging.dandiarchive.org/#/dandiset/204919"

      - name: Run pytest with coverage
        run: pytest -rsx --cov=nwbinspector --cov-report xml:./coverage.xml

      - if: ${{ matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest' }}
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          file: ./coverage.xml

  build-and-test-no-dandi:
    name: Testing using ${{ matrix.os }} with ${{ matrix.python-version }} without dandi dependencies
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --prune --unshallow --tags

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pytest
        run: pip install pytest

      - name: Install package
        run: pip install .

      - name: Run pytest with coverage
        run: pytest -rsx
